name: Verify

on: [pull_request]

jobs:
  verification:
    name: Code Analysis and Testing
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]
        poetry-version: [ "1.8.2" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    outputs:
      coverage: ${{ steps.generate-coverage.outputs.coverage }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - name: Cache virtualenv
      uses: actions/cache@v4
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install Dependencies
      run: poetry install
    - name: Run Black
      run: poetry run black --check .
    - name: Run Flake8
      run: poetry run flake8 .
    - name: Run Automated Tests
      run: poetry run coverage run -m pytest
    - name: Generate Coverage Report
      id: generate-coverage
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      run: |
        poetry run coverage xml
        {
          echo 'coverage<<EOF'
          cat coverage.xml
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"
  publish:
    name: Publish Quality Metrics
    runs-on: ubuntu-latest
    needs: verification
    steps:
      - name: Dump Coverage Report
        run: echo "$COVERAGE" > coverage.xml
        env:
          COVERAGE: ${{needs.verification.outputs.coverage}}
      - name: Publish Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '80 90'
      - name: Publish Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
